package desafio3;

import java.util.ArrayList;
import java.util.List;

public class AnagramaAux {

	public List<String> subString(String palavra) {
// Responsavel por criar e armazenar as sub strings em um array list

		List<String> anagramas = new ArrayList<String>();

		int tamanhoString = palavra.length();
		char charPalavra[];

		// Cira sub
		// strings----------------------------------------------------------------------------------------------------------------------------------------------------
		for (int inicio = 0; inicio < tamanhoString; inicio++) {
			anagramas.addAll(new ArrayList<String>(inicio));
			for (int fim = inicio + 1; fim < tamanhoString + 1; fim++) {

				// Organiza
				// Palavra------------------------------------------------------------------------------------------------------------------------------------------------
				charPalavra = palavra.substring(inicio, fim).toCharArray();

				for (int r = 0; r < tamanhoString; r++) {
					for (int o = 0; o < tamanhoString; o++) {

						char x = ' ';
						char y = ' ';

						if (o < palavra.substring(inicio, fim).length() - 1) {
							if (charPalavra[o] > charPalavra[o + 1]) {
								if (( charPalavra[o] >= 65 && charPalavra[o] <= 90)||( charPalavra[o] >= 97 && charPalavra[o] <= 122)) {
									
									x = charPalavra[o];
									y = charPalavra[o + 1];

									charPalavra[o + 1] = x;
									charPalavra[o] = y;
									
								} else {
									anagramas.clear();
									return anagramas;
								}

							}
						}
					}
				}

				// Transforma array char em
				// String-------------------------------------------------------------------------------------------------------------------------------------

				anagramas.add(String.valueOf(charPalavra).toLowerCase());

			}

		}

		return anagramas;
	}

	public int contador(List<String> anagramas) {
		int i = 0, contador = 0;

		while (i < anagramas.size()) {
			int j = i + 1;
			while (j < anagramas.size()) {
				if (anagramas.get(i).equals(anagramas.get(j))) {
					contador++;
					break;
				}
				j++;
			}
			i++;
		}

		return contador;

	}

}
